% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jackknife.R
\name{jackknife}
\alias{jackknife}
\alias{jackknife.train}
\alias{plot.jackknife.train}
\title{Jackknife test to measure variable importance}
\usage{
jackknife(model, ...)

\method{jackknife}{train}(
  model,
  summaryFunction = NULL,
  errorFunction = ci_95,
  param_override_only = NULL,
  param_override_without = NULL,
  progress = TRUE,
  ...
)

\method{plot}{jackknife.train}(x, metric = NULL, plot_errorbar = TRUE, ...)
}
\arguments{
\item{model}{A model returned by \code{\link[caret]{train}}.}

\item{...}{ignored}

\item{summaryFunction}{A Summary function (one of \code{\link[caret]{defaultSummary}}) that calculate the metrics. 
If \code{NULL}, the summaryFunction provided in the model will be used.}

\item{errorFunction}{A function used to calculate errors across resamples. Default is 95\% confidence interval.}

\item{param_override_only, param_override_without}{A list or data.frame with parameters to override the
best tune before they are passed to "train" to create a model with only and without one variable.
Useful for models where tuning parameters are dependent of the number of variables (like 'mtry' for randomForest).}

\item{progress}{logical. Show progress bar? If parallel is activated, it automatically defaults to \code{FALSE}.}

\item{x}{An object from \code{jackknife}.}

\item{metric}{A character, indicating which metric to plot. If \code{NULL},
only the first metric is plotted.}

\item{plot_errorbar}{logical. Should plot error bars?}
}
\value{
A data.table that also inherts "jackknife.train" with metrics for each variable.
}
\description{
Create metrics for models with and without each variable.
}
\details{
Multiple models are created using the same method and parameters of the \code{model}.
Each variable is excluded in turn, and a model created with the remaining variables.
Then a model is created using each variable in isolation. Metrics (provided by \code{summaryFunction})
are calculated for each model.
}
\examples{
\dontrun{
jackknife.train(model)

# using caret twoClassSummary and standard deviation as errors
jackknife.train(model, summaryFunction = twoClassSummary, errorFunction = sd)

# For models trained with 'rf', override 'mtry' as 1 when training with a single variable
j <- jackknife.train(model, param_override_only = list(mtry=1))
plot(j)
}
}
