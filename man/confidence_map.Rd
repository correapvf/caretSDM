% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/confidence_map.R
\name{confidence_map}
\alias{confidence_map}
\alias{confidence_map.train}
\alias{confidence_map.list}
\alias{confidence_map.ensemble.train}
\title{Create confidence maps}
\usage{
confidence_map(model, ...)

\method{confidence_map}{train}(
  model,
  rasterStack,
  nrep = 10,
  doclamp = FALSE,
  progress = TRUE,
  ...
)

\method{confidence_map}{list}(
  model,
  rasterStack,
  nrep = 10,
  doclamp = FALSE,
  progress = TRUE,
  ...
)

\method{confidence_map}{ensemble.train}(
  model,
  rasterStack,
  nrep = 10,
  doclamp = FALSE,
  progress = TRUE,
  return.all = FALSE,
  ...
)
}
\arguments{
\item{model}{A model returned by \code{\link[caret]{train}} or \code{\link{createEnsemble}}.}

\item{...}{ignored}

\item{rasterStack}{A RasterStack from the \code{raster} package, used to create predictions.}

\item{nrep}{Number of bootstrap replicates.}

\item{doclamp}{logical. Clamp \code{RasterStack} based on training data before predictions?}

\item{progress}{logical. Show progress text? If parallel is activated, it automatically defaults to \code{FALSE}.}

\item{return.all}{logical. If \code{TRUE}, return predictions and cvs for all models. Else, return
only the CV for the ensemble model.}
}
\value{
For 'train' or 'list' methods, a 'RasterLayer' or a 'RasterStack' containing the coefficient of variation
(CV) of the bootstrap output for each model. \cr\cr
For 'ensemble.train' method, if \code{return.all} is \code{TRUE}, return a list with \code{$preds}
and \code{$cvs} containing each a 'RasterStack' of the predictions and CVs of all models,
including the ensemble. Else, return a single 'RasterLayer' with CV of the ensemble model.
}
\description{
Create confidence maps using bootstrap replicates
}
\details{
For each interaction (defined by nrep), the trained data set for each model is resampled (bootstrap)
and each model retrained using this new data.\cr
Predictions are made for each model for each interaction, separately.

For 'train' objects, the mean and standard deviation from all replicates are returned.

For 'ensemble.train' objects, the coefficient of variation is calculated for each model, which in turn is assembled
based on algorithmic used to create the ensemble:
\tabular{ll}{
\code{mean, weighted_mean   ->} \tab \figure{eq_mean.png}\cr
\code{median, number_votes  ->} \tab \figure{eq_median.png}
}
Where \code{cvi =} mean coefficient of variation for model \code{i},\cr
\code{pi =} predictions for model \code{i} using all training data,\cr
\code{wi =} weight of model \code{i},\cr
and \code{p =} predictions of the ensemble using all training data.\cr
For \code{weighted_mean}, \code{wi = metric/sum(all metrics)};
and for \code{mean}, \code{wi = 1/(number of models)}.
}
\note{
When using \code{progress = TRUE} in parallel, you must make clusters using the \code{doSNOW} package.
Using package \code{doParallel} will return a warning, and the progress bar will not be updated.
}
